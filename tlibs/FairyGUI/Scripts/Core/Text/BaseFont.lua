--
-- Created by IntelliJ IDEA.
-- AUTHOR: ChenCY
-- Date: 2018/10/23 10:33
--

local Class = require('libs.Class')

local Vector2 = Love2DEngine.Vector2
local Rect = Love2DEngine.Rect
local TextFormat = FairyGUI.TextFormat
local NTexture = FairyGUI.NTexture
local PackageItem = FairyGUI.PackageItem

---@class FairyGUI.BaseFont.GlyphInfo:ClassType
---@field public vert Love2DEngine.Rect
---@field public uv Love2DEngine.Vector2[]
---@field public width number
---@field public height number
---@field public channel number
local GlyphInfo = Class.inheritsFrom('GlyphInfo')

function GlyphInfo:__ctor()
    self.vert = Rect.zero
    self.uv = {Vector2.zero, Vector2.zero, Vector2.zero, Vector2.zero}
    self.width = 0
    self.height = 0
    self.channel = 0
end

---@class FairyGUI.BaseFont:ClassType
---@field public name string @
---@field public mainTexture FairyGUI.NTexture @ The texture of this font object.
---@field public canTint boolean @  Can this font be tinted? Will be true for dynamic font and fonts generated by BMFont.
---@field public canLight boolean @ Can this font be lighted?
---@field public canOutline boolean @ Can this font be stroked? Will be false for Bitmap fonts.
---@field public hasChannel boolean @ Font generated by BMFont use channels.
---@field public customBold boolean @ If true, it will use extra vertices to enhance bold effect
---@field public customBoldAndItalic boolean @ If true, it will use extra vertices to enhance bold effect ONLY when it is in italic style.
---@field public shader string @ The shader for this font object.
---@field public keepCrisp boolean @ Keep text crisp.
---@field public packageItem FairyGUI.PackageItem @
local BaseFont = Class.inheritsFrom('BaseFont')

---@param format FairyGUI.TextFormat
---@param fontSizeScale number
function BaseFont:SetFormat(format, fontSizeScale)

end

---@param text string
function BaseFont:PrepareCharacters(text)

end

---@param ch char
---@param width number @ref
---@param height number @ref
---@return boolean, number, number
function BaseFont:GetGlyphSize(ch, width, height)
    width = 0
    height = 0
    return false, width, height
end

---@param ch char
---@param glyph FairyGUI.BaseFont.GlyphInfo
---@return boolean
function BaseFont:GetGlyph(ch, glyph)
    return false
end

BaseFont.GlyphInfo = GlyphInfo
FairyGUI.BaseFont = BaseFont
return BaseFont